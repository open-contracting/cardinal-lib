name: Release
on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - env:
          GH_TOKEN: ${{ github.token }}
        run: gh release create ${{ github.ref_name }}
  assets:
    needs: release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # https://github.com/cross-rs/cross#supported-targets
        include:
          # Include all "Tier 1" targets.
          # https://doc.rust-lang.org/rustc/platform-support.html#tier-1-with-host-tools
          # 32-bit (i686)
          - build: linux-32
            os: ubuntu-latest
            target: i686-unknown-linux-gnu
          # i686-apple-darwin is Tier 3.
          - build: windows-32-gnu
            os: ubuntu-latest
            target: i686-pc-windows-gnu
          - build: windows-32-msvc
            os: ubuntu-latest
            target: i686-pc-windows-msvc
          # 64-bit (x86)
          - build: linux-64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - build: macos-64
            os: macos-latest
            target: x86_64-apple-darwin
          - build: windows-64-gnu
            os: ubuntu-latest
            target: x86_64-pc-windows-gnu
          - build: windows-64-msvc
            os: ubuntu-latest
            target: x86_64-pc-windows-msvc
          # 64-bit (ARM)
          - build: linux-arm
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          # Include "Tier 2 with Host Tools" targets for the top 2 desktop operating systems.
          # https://doc.rust-lang.org/rustc/platform-support.html#tier-2-with-host-tools
          # aarch64-apple-darwin is not available as a cross target or GitHub-hosted runner.
          # https://github.com/cross-rs/cross-toolchains#apple-targets
          # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
          # aarch64-pc-windows-gnullvm is Tier 3.
          - build: windows-arm
            os: ubuntu-latest
            target: aarch64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - run: cargo install cross --git https://github.com/cross-rs/cross
      - id: cross
        run: echo "stderr=$(cross build --release --target ${{ matrix.target }})" 2>> $GITHUB_OUTPUT
      - if: steps.cross.outputs.stderr != ''
        run: |
          echo "${{ steps.cross.outputs.stderr }}"
          exit 1
      # 7z is available on all runners.
      # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#preinstalled-software
      - name: Create archive
        id: archive
        shell: bash
        run: |
          DIRECTORY="ocdscardinal-${{ github.ref_name }}-${{ matrix.target }}"
          if [[ "${{ matrix.target }}" =~ "-pc-windows-" ]]; then
            SUFFIX=".exe"
          else
            SUFFIX=""
          fi
          mkdir "$DIRECTORY"
          cp CHANGELOG.md LICENSE README.md "target/${{ matrix.target }}/release/ocdscardinal$SUFFIX" "$DIRECTORY"
          7z a "$DIRECTORY.zip" "$DIRECTORY"
          echo "path=$DIRECTORY.zip" >> $GITHUB_OUTPUT
      - env:
          GH_TOKEN: ${{ github.token }}
        run: gh release upload ${{ github.ref_name }} ${{ steps.archive.outputs.path }}
